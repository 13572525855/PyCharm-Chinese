f###=\u901A\u7528\u8BCD###
GNAME.function=\u529F\u80FD
GNAME.class=\u7C7B
GNAME.var=\u53D8\u91CF
GNAME.item=\u9879\u76EE

# Actions and associated commands
ACT.CMD.use.import=\u4F7F\u7528\u5BFC\u5165\u7684\u6A21\u5757
ACT.qualify.with.module=\u4F7F\u7528\u5BFC\u5165\u7684\u6A21\u5757\u8FDB\u884C\u8BA4\u8BC1
ACT.from.some.module.import=\u8FDB\u53E3\u4E8E ...

### Quick fixes ###
QFIX.auto.import.family=\u8FDB\u53E3
QFIX.auto.import.import.this.name=\u5BFC\u5165\u8FD9\u4E2A\u540D\u5B57
QFIX.auto.import.import.name=\u5BFC\u5165\u201C{0}\u201D

QFIX.local.auto.import.family=\u672C\u5730\u5BFC\u5165
QFIX.local.auto.import.import.locally={0}\u5728\u672C\u5730

QFIX.add.import.add.import=\u6DFB\u52A0\u201C\u201D\u201C{0}\u201D\u201C\u201D

QFIX.add.parameter.self=\u6DFB\u52A0\u53C2\u6570\u201C{0}\u201D
QFIX.add.super=\u6DFB\u52A0\u8D85\u7C7B\u547C\u53EB

QFIX.add.property=\u4E3A\u8BE5\u5B57\u6BB5\u6DFB\u52A0\u5C5E\u6027
QFIX.use.property=\u4F7F\u7528\u5C5E\u6027\u7684\u5B57\u6BB5

QFIX.make.public=\u516C\u4E4B\u4E8E\u4F17

QFIX.convert.to.new.style=\u8F6C\u6362\u4E3A\u65B0\u98CE\u683C\u7684\u7C7B

QFIX.change.base.class=\u66F4\u6539\u57FA\u7C7B

QFIX.create.property=\u521B\u5EFA\u5C5E\u6027

QFIX.add.encoding=\u6DFB\u52A0\u7F16\u7801\u58F0\u660E

QFIX.NAME.parameters=\u51FD\u6570\u548C\u65B9\u6CD5\u7684\u53C2\u6570
QFIX.rename.parameter.to.$0=\u91CD\u547D\u540D\u4E3A\u201C{0}\u201D

QFIX.NAME.add.field.$0.to.class.$1=\u5C06\u5B57\u6BB5\u201C{0}\u201D\u6DFB\u52A0\u5230\u7C7B{1}
QFIX.added.constructor.$0.for.field.$1=\u5728\u7C7B<code> {0} </code>\u4E2D\u6DFB\u52A0\u4E86__init__\uFF0C\u4EE5\u9002\u5E94\u65B0\u7684\u5B57\u6BB5<code> {1} </code>
QFIX.failed.to.add.field=<br/> <br/>\u65E0\u6CD5\u6DFB\u52A0\u5B57\u6BB5\uFF01<br/> <br/>

QFIX.NAME.add.method.$0.to.class.$1=\u5C06\u65B9\u6CD5{0}()\u6DFB\u52A0\u5230\u7C7B{1}
QFIX.failed.to.add.method=<br/> <br/>\u6DFB\u52A0\u65B9\u6CD5\u5931\u8D25\uFF01<br/> <br/>

QFIX.NAME.add.function.$0.to.module.$1=\u5728\u6A21\u5757{1}\u4E2D\u521B\u5EFA\u51FD\u6570{0}()
QFIX.failed.to.add.function=<br/> <br/>\u65E0\u6CD5\u6DFB\u52A0\u529F\u80FD\uFF01<br/> <br/>

QFIX.action.failed=\u884C\u52A8\u5931\u8D25

QFIX.remove.trailing.semicolon=\u5220\u9664\u5C3E\u968F\u5206\u53F7

QFIX.dict.creation=\u66FF\u6362\u5B57\u5178\u521B\u5EFA
QFIX.list.creation=\u66FF\u6362\u5217\u8868\u521B\u5EFA

QFIX.classic.class.transform=\u7EE7\u627F\u5BF9\u8C61

QFIX.add.global=\u6DFB\u52A0\u5168\u5C40\u8BED\u53E5

QFIX.simplify.$0=\u5C06\u5E03\u5C14\u8868\u8FBE\u5F0F\u66FF\u6362\u4E3A\u201C{0}\u201D

QFIX.move.from.future.import=\u5C06\u201C__future__ import\u201D\u79FB\u52A8\u5230\u6B63\u786E\u7684\u4F4D\u7F6E

QFIX.replace.equality=\u66FF\u6362\u5E73\u7B49

QFIX.redundant.parentheses=\u5220\u9664\u591A\u4F59\u7684\u62EC\u53F7

QFIX.augment.assignment=\u7528\u8D4B\u503C\u8D4B\u503C\u66FF\u6362\u8D4B\u503C

QFIX.chained.comparison=\u7B80\u5316\u94FE\u5F0F\u6BD4\u8F83

QFIX.statement.effect=\u7528\u51FD\u6570\u8C03\u7528\u66FF\u6362
QFIX.statement.effect.move.docstring=\u5C06\u6587\u6863\u5B57\u7B26\u4E32\u79FB\u5230\u9002\u5F53\u7684\u4F4D\u7F6E

QFIX.statement.effect.introduce.variable=\u5F15\u5165\u53D8\u91CF

QFIX.unresolved.reference=\u5C06\u201C{0}\u201D\u66FF\u6362\u4E3A\u201C{1}\u3002{0}\u201D

QFIX.unresolved.reference.add.param.$0=\u521B\u5EFA\u53C2\u6570\u201C{0}\u201D
QFIX.unresolved.reference.add.param=\u521B\u5EFA\u53C2\u6570\u4F9B\u53C2\u8003

# UnresolvedRefCreateFunctionQuickFix
QFIX.unresolved.reference.create.function=\u521B\u5EFA\u529F\u80FD
QFIX.NAME.unresolved.reference.create.function=\u521B\u5EFA\u51FD\u6570\u201C{0}\u201D

QFIX.introduce.variable=\u4E3A\u8BED\u53E5\u5F15\u5165\u53D8\u91CF

QFIX.unresolved.reference.add.future=\u6DFB\u52A0\u201Cfrom __future__ import withstatement\u201D(_S)

# RemoveUnnecessaryBackslashQuickFix
QFIX.remove.unnecessary.backslash=\u5220\u9664\u8868\u8FBE\u5F0F\u4E2D\u4E0D\u5FC5\u8981\u7684\u53CD\u659C\u6760

# ConvertDocstringQuickFix
QFIX.convert.single.quoted.docstring=\u5C06docstring\u8F6C\u6362\u4E3A\u4E09\u91CD\u53CC\u5F15\u53F7\u5B57\u7B26\u4E32\u5F62\u5F0F

#UnresolvedRefTrueFalseQuickFix
QFIX.unresolved.reference.replace.$0=\u66FF\u6362\u4E3A{0}

#PyDefaultArgumentQuickFix
QFIX.default.argument=\u66FF\u6362\u53EF\u53D8\u7684\u9ED8\u8BA4\u53C2\u6570

#RemoveArgumentEqualDefaultQuickFix
QFIX.remove.argument.equal.default=\u5220\u9664\u53C2\u6570\u7B49\u4E8E\u9ED8\u8BA4

# ReplaceFunctionWithSetLiteralQuickFix
QFIX.replace.function.set.with.literal=\u7528set literal\u66FF\u6362\u51FD\u6570\u8C03\u7528

#DocstringQuickFix
QFIX.docstring.add.$0=\u6DFB\u52A0\u6587\u6863\u5B57\u7B26\u4E32\u53C2\u6570\u201C{0}\u201D
QFIX.docstring.remove.$0=\u5220\u9664docstring\u53C2\u6570\u201C{0}\u201D
QFIX.docstring.insert.stub=\u63D2\u5165\u6587\u6863\u5B57\u7B26\u4E32

#RemoveDecoratorQuickFix
QFIX.remove.decorator=\u5220\u9664\u88C5\u9970\u8005

#PyRenameUnresolvedRefQuickFix
QFIX.rename.unresolved.reference=\u91CD\u547D\u540D\u53C2\u8003

#PyMoveAttributeToInitQuickFix
QFIX.move.attribute=\u5C06\u5C5E\u6027\u79FB\u52A8\u5230__init__\u65B9\u6CD5

#PyMakeMethodStaticQuickFix
QFIX.NAME.make.static=\u4F7F\u65B9\u6CD5\u9759\u6001

#PyMakeFunctionFromMethodQuickFix
QFIX.NAME.make.function=\u4ECE\u65B9\u6CD5\u505A\u529F\u80FD

#PyMakeFunctionReturnTypeQuickFix
QFIX.NAME.make.$0.return.$1=\u4F7F\u201C{0}\u201D\u8FD4\u56DE\u201C{1}\u201D

#PyImplementMethodsQuickFix
QFIX.NAME.implement.methods=\u5B9E\u73B0\u62BD\u8C61\u65B9\u6CD5

QFIX.NAME.remove.assignment=\u5220\u9664\u4F5C\u4E1A

QFIX.NAME.remove.statement=\u5220\u9664\u8BED\u53E5

QFIX.NAME.update.parameters=\u66F4\u65B0\u53C2\u6570

QFIX.NAME.remove.call=\u5220\u9664\u7535\u8BDD

QFIX.NAME.move.except.up=\u9664\u4E86\u5B50\u53E5\u4EE5\u5916

QFIX.NAME.remove.dict.key=\u5220\u9664\u8FD9\u4E2A\u952E

QFIX.NAME.add.specifier=\u6DFB\u52A0\u683C\u5F0F\u8BF4\u660E\u7B26\u5B57\u7B26

QFIX.NAME.add.exception.base=\u6DFB\u52A0\u5F02\u5E38\u57FA\u7C7B

QFIX.NAME.change.signature=\u66F4\u6539\u7B7E\u540D
QFIX.change.signature.of=\u66F4\u6539{0}\u7684\u7B7E\u540D

QFIX.NAME.remove.argument=\u5220\u9664\u53C2\u6570

QFIX.NAME.remove.parameter=\u5220\u9664\u53C2\u6570

QFIX.NAME.rename.argument=\u91CD\u547D\u540D\u53C2\u6570
QFIX.NAME.rename.element=\u91CD\u547D\u540D\u5143\u7D20

QFIX.NAME.wrap.in.exception=\u7528\u5F02\u5E38\u8C03\u7528\u5305\u88C5

QFIX.NAME.make.list=\u7528\u5217\u8868\u66FF\u6362\u5143\u7EC4

#PyRemoveUnderscoresInNumericLiteralsQuickFix
QFIX.NAME.remove.underscores.in.numeric=\u5220\u9664\u6570\u5B57\u6587\u5B57\u4E2D\u7684\u4E0B\u5212\u7EBF

# InstallAndImportQuickFix
QFIX.install.and.import.package=\u5B89\u88C5\u548C\u5BFC\u5165\u5305
QFIX.NAME.install.and.import.package=\u5B89\u88C5\u5E76\u5BFC\u5165\u5305\u201C{0}\u201D

# Intentions: INTN
INTN.Family.convert.import.unqualify=\u5C06\u201C\u5BFC\u5165\u6A21\u5757\u201D\u8F6C\u6362\u4E3A\u201C\u4ECE\u6A21\u5757\u5BFC\u5165\u201D
INTN.Family.convert.import.qualify=\u5C06\u201C\u4ECE\u6A21\u5757\u5BFC\u5165\u201D\u8F6C\u6362\u4E3A\u201C\u5BFC\u5165\u6A21\u5757\u201D
INTN.Family.toggle.import.alias=\u5207\u6362\u5BFC\u5165\u522B\u540D
INTN.Family.convert.except.part=\u5C06\u90E8\u5206\u8F6C\u6362\u4E3A\u652F\u6301\u7684\u5F62\u5F0F
INTN.Family.convert.set.literal=\u8F6C\u6362\u8BBE\u7F6E\u6587\u5B57\u4E24\u4E2A\u652F\u6301\u7684\u5F62\u5F0F
INTN.Family.convert.builtin=\u8F6C\u6362\u5185\u7F6E\u6A21\u5757\u5BFC\u5165
INTN.Family.convert.dict.comp.expression=\u8F6C\u6362\u8BCD\u5178\u7406\u89E3\u8868\u8FBE
INTN.Family.convert.string=\u5C06\u5355\u5F15\u53F7\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u53CC\u5F15\u53F7

INTN.convert.to.from.$0.import.$1=\u8F6C\u6362\u4E3A\u201Cfrom {0} import {1}\u201D
INTN.convert.to.import.$0=\u8F6C\u6362\u4E3A\u201Cimport {0}\u201D

INTN.alias.for.$0.dialog.title=\u522B\u540D\u201C{0}\u201D:
INTN.add.alias.for.import.$0=\u5C06\u522B\u540D\u6DFB\u52A0\u5230\u201C{0}\u201D
INTN.remove.alias.for.import.$0=\u5220\u9664\u522B\u540D\u201C{0}\u201D

INTN.Family.migration.to.python3=\u8FC1\u79FB\u5230Python 3

INTN.convert.except.to=\u5C06'exceptClass\uFF0CTarget'\u9664\u5916\u8F6C\u6362\u4E3A'exceptClass as Target'

INTN.convert.set.literal.to=\u5C06\u8BBE\u7F6E\u6587\u5B57\u8F6C\u6362\u4E3A\u201C\u8BBE\u7F6E\u201D\u65B9\u6CD5\u8C03\u7528

INTN.convert.builtin.import=\u5C06\u5185\u7F6E\u6A21\u5757\u5BFC\u5165\u8F6C\u6362\u4E3A\u652F\u6301\u7684\u5F62\u5F0F

INTN.convert.dict.comp.to=\u5C06\u5B57\u5178\u7406\u89E3\u8F6C\u6362\u4E3A\u201C\u5B57\u5178\u201D\u65B9\u6CD5\u8C03\u7528

INTN.replace.noteq.operator=\u66F4\u6362\u4E0D\u76F8\u7B49\u7684\u64CD\u4F5C\u5458

INTN.remove.leading.$0=\u5220\u9664\u524D\u5BFC{0}
INTN.remove.leading.prefix=\u5220\u9664\u524D\u7F00

INTN.remove.trailing.l=\u5220\u9664\u540E\u9762\u7684L

INTN.replace.list.comprehensions=\u5C06\u5217\u8868\u63A8\u5BFC\u8F6C\u6362\u4E3A\u652F\u6301\u7684\u5F62\u5F0F

INTN.replace.list.comprehensions.with.for=\u5C06\u5217\u8868\u63A8\u5BFC\u8F6C\u6362\u4E3Afor\u5FAA\u73AF

INTN.replace.octal.numeric.literal=\u5C06\u516B\u8FDB\u5236\u6570\u5B57\u6587\u5B57\u8F6C\u6362\u4E3A\u652F\u6301\u7684\u5F62\u5F0F

INTN.replace.raise.statement=\u5C06raise\u8BED\u53E5\u8F6C\u6362\u4E3A\u53D7\u652F\u6301\u7684\u8868\u5355

INTN.replace.backquote.expression=\u66FF\u6362\u53CD\u5F15\u53F7\u8868\u8FBE\u5F0F

INTN.replace.method=\u66FF\u6362\u5F53\u524DPython\u7248\u672C\u4E0D\u652F\u6301\u7684\u65B9\u6CD5

INTN.split.if=\u62C6\u5206\u5982\u679C
INTN.split.if.text=\u5982\u679C\u5206\u62102\u4E2A

INTN.negate.comparison=\u5426\u5B9A\u6BD4\u8F83
INTN.negate.$0.to.$1=\u5C06\u201C{0}\u201D\u66FF\u6362\u4E3A\u201C{1}\u201D

INTN.string.concatenation.to.format=\u7528\u683C\u5F0F\u8FD0\u7B97\u7B26\u66FF\u6362\u5B57\u7B26\u4E32\u8FDE\u63A5
INTN.replace.plus.with.format.operator=\u7528\u5B57\u7B26\u4E32\u683C\u5F0F\u5316\u8FD0\u7B97\u7B26\u66FF\u6362
INTN.replace.plus.with.str.format=\u7528str.format\u65B9\u6CD5\u8C03\u7528\u66FF\u6362

# ConvertFormatOperatorToMethodIntention
INTN.format.operator.to.method=\u5C06\u683C\u5F0F\u8FD0\u7B97\u7B26\u7528\u6CD5\u8F6C\u6362\u4E3Astr.format\u65B9\u6CD5\u8C03\u7528

# PyConvertToFStringIntention
INTN.convert.to.fstring.literal=\u8F6C\u6362\u4E3Af-string\u6587\u5B57
INTN.replace.with.method=\u7528str.format\u65B9\u6CD5\u8C03\u7528\u66FF\u6362

INTN.flip.comparison=\u7FFB\u8F6C\u6BD4\u8F83
INTN.flip.$0=\u7FFB\u8F6C\u201C{0}\u201D
INTN.flip.$0.to.$1=\u7FFB\u8F6C\u201C{0}\u201D\u5230\u201C{1}\u201D

INTN.convert.string=\u5C06\u5355\u5F15\u53F7\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u53CC\u5F15\u53F7

INTN.join.if=\u52A0\u5165\u5982\u679C\u662F
INTN.join.if.text=\u52A0\u5165\u4E24\u4E2A\u5982\u679C\u662F

INTN.convert.dict.constructor.to.dict.literal=\u8F6C\u6362\u5B57\u5178\u6784\u9020\u51FD\u6570\u4E3A\u5B57\u9762\u7684\u5F62\u5F0F
INTN.convert.dict.literal.to.dict.constructor=\u8F6C\u6362\u5B57\u5178\u4E3A\u5B57\u5178\u6784\u9020

INTN.quoted.string=\u5728\u5355\u5F15\u53F7\u548C\u53CC\u5F15\u53F7\u5B57\u7B26\u4E32\u4E4B\u95F4\u8F6C\u6362
INTN.quoted.string.single.to.double=\u5C06\u5355\u5F15\u53F7\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u53CC\u5F15\u53F7\u5B57\u7B26\u4E32
INTN.quoted.string.double.to.single=\u5C06\u53CC\u5F15\u53F7\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u5355\u5F15\u53F7\u5B57\u7B26\u4E32

INTN.convert.lambda.to.function=\u5C06lambda\u8F6C\u6362\u4E3A\u51FD\u6570

INTN.convert.variadic.param=\u4ECE\u53EF\u53D8\u53C2\u6570\u8F6C\u6362\u4E3A\u5E38\u89C4\u53C2\u6570(s\uFF09

# PyConvertTripleQuotedStringIntention
INTN.triple.quoted.string=\u5C06\u4E09\u91CD\u5F15\u53F7\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u5355\u5F15\u53F7\u5B57\u7B26\u4E32

# PyBaseConvertCollectionLiteralIntention
INTN.convert.collection.literal.family=\u5C06\u6536\u85CF\u96C6\u8F6C\u6362\u4E3A{0}
INTN.convert.collection.literal.text=\u5C06{0}\u8F6C\u6362\u4E3A{1}

# PyConvertTypeCommentToVariableAnnotation
INTN.convert.type.comment.to.variable.annotation.family=\u5C06\u7C7B\u578B\u6CE8\u91CA\u8F6C\u6362\u4E3A\u53D8\u91CF\u6CE8\u91CA
INTN.convert.type.comment.to.variable.annotation.text=\u8F6C\u6362\u4E3A\u53D8\u91CF\u6CE8\u91CA


INTN.demorgan.law=\u5FB7\u6469\u6839\u6CD5\u5F8B

# PyTransformConditionalExpressionIntention
INTN.transform.into.if.else.statement=\u5C06\u6761\u4EF6\u8868\u8FBE\u5F0F\u8F6C\u6362\u4E3Aif / else\u8BED\u53E5

# PyConvertTripleQuotedStringIntention
INTN.doc.string.stub=\u63D2\u5165\u6587\u6863\u5B57\u7B26\u4E32\u5B58\u6839

#SpecifyTypeInDocstringIntention
INTN.specify.type=\u5728\u6587\u6863\u5B57\u7B26\u4E32\u4E2D\u6307\u5B9A\u7C7B\u578B\u4EE5\u4F9B\u53C2\u8003
INTN.specify.return.type=\u5728\u6587\u6863\u5B57\u7B26\u4E32\u4E2D\u6307\u5B9A\u8FD4\u56DE\u7C7B\u578B
INTN.add.parameters.to.docstring=\u5C06\u53C2\u6570\u6DFB\u52A0\u5230docstring

#SpecifyTypeInPy3AnnotationsIntention
INTN.specify.type.in.annotation=\u4F7F\u7528\u6CE8\u91CA\u6307\u5B9A\u7C7B\u578B\u4EE5\u4F9B\u53C2\u8003
INTN.specify.return.type.in.annotation=\u4F7F\u7528\u6CE8\u91CA\u6307\u5B9A\u8FD4\u56DE\u7C7B\u578B

#PyAnnotateTypesIntention
INTN.annotate.types=\u6CE8\u91CA\u7C7B\u578B

#TypeAssertionIntention
INTN.insert.assertion=\u63D2\u5165\u7C7B\u578B\u65AD\u8A00

#PyYieldFromIntention
INTN.yield.from=\u5C06\u201Cyield\u201D\u663E\u5F0F\u8FED\u4EE3\u8F6C\u6362\u4E3A\u201Cyield from\u201D\u8868\u8FBE\u5F0F

#PyConvertStaticMethodToFunctionIntention
INTN.convert.static.method.to.function=\u5C06\u9759\u6001\u65B9\u6CD5\u8F6C\u6362\u4E3A\u51FD\u6570

#PyConvertMethodToPropertyIntention
INTN.convert.method.to.property=\u5C06\u65B9\u6CD5\u8F6C\u6362\u4E3A\u5C5E\u6027

# Conflict checker
CONFLICT.name.$0.obscured=\u540D\u79F0\u201C{0}\u201D\u88AB\u672C\u5730\u5B9A\u4E49\u906E\u853D
CONFLICT.name.$0.obscured.cannot.convert=\u540D\u79F0\u201C{0}\u201D\u88AB\u906E\u76D6\u3002\u65E0\u6CD5\u8F6C\u6362\u3002
CONFLICT.occurrence.sing=\u53D1\u751F
CONFLICT.occurrence.pl=\u4E8B\u4EF6

### Surround with templates ###
surround.with.whileelse.template=while / else
surround.with.return.template=\u8FD4\u56DE
surround.with.try.except.template=\u5C1D\u8BD5/\u9664\u4E86

##########################################################################################################################
# Unwrap
##########################################################################################################################
unwrap.if=\u5982\u679C...\u89E3\u5305...
unwrap.while=\u89E3\u5F00...
unwrap.for=\u6253\u5F00...
unwrap.with=\u6253\u5F00...
unwrap.try=\u6253\u5F00\u8BD5\u8BD5...
unwrap.else=\u6253\u5F00\u522B\u7684...
unwrap.elif=\u89E3\u5305elif...
remove.else=\u5220\u9664\u5176\u4ED6...
remove.elif=\u5220\u9664elif...

### Inspections: INSP ###
INSP.GROUP.python=\u87D2\u86C7
INSP.GROUP.mako=\u771F\u5B50

# PyArgumentListInspection
INSP.NAME.incorrect.call.arguments=\u8C03\u7528\u53C2\u6570\u4E0D\u6B63\u786E
INSP.cannot.appear.past.keyword.arg=\u4E0D\u80FD\u51FA\u73B0\u5728\u5173\u952E\u5B57\u53C2\u6570\u6216* arg\u6216** kwarg\u4E4B\u540E
INSP.unexpected.arg=\u610F\u5916\u7684\u8BF4\u6CD5
INSP.unexpected.arg(s)=\u610F\u5916\u7684\u8BBA\u636E
INSP.parameter.$0.unfilled=\u53C2\u6570\u201C{0}\u201D\u672A\u586B\u5145
INSP.parameter(s).unfilled=\u53C2\u6570\u672A\u586B\u5145
INSP.possible.callees=\u53EF\u80FD\u7684\u88AB\u8C03\u7528\u8005
INSP.func.$0.lacks.first.arg=\u51FD\u6570\u201C{0}\u201D\u7F3A\u5C11\u4F4D\u7F6E\u53C2\u6570
INSP.expected.dict.got.$0=\u9884\u671F\u5B57\u5178\uFF0C\u5F97\u5230{0}
INSP.expected.iter.got.$0=\u9884\u671F\u4E00\u4E2A\u8FED\u4EE3\uFF0C\u5F97\u5230{0}
INSP.more.args.that.pos.params=\u591A\u4E2A\u503C\u89E3\u6790\u4E3A\u4E00\u4E2A\u4F4D\u7F6E\u53C2\u6570
INSP.multiple.values.resolve.to.positional.$0=\u591A\u4E2A\u503C\u89E3\u6790\u4E3A\u4F4D\u7F6E\u53C2\u6570\u201C{0}\u201D
INSP.cannot.analyze=\u8FD9\u4E2A\u53C2\u6570\u5217\u8868\u4E0D\u80FD\u88AB\u5206\u6790

# PyMethodParametersInspection
INSP.NAME.problematic.first.parameter=\u7B2C\u4E00\u4E2A\u53C2\u6570\u6709\u9EBB\u70E6\u7684\u65B9\u6CD5
INSP.must.have.first.parameter=\u65B9\u6CD5\u5FC5\u987B\u5177\u6709\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u901A\u5E38\u79F0\u4E3A\u201C{0}\u201D
INSP.probably.mistyped.self=\u4F60\u4E0D\u662F\u6307\u201C\u81EA\u6211\u201D\u5417\uFF1F
INSP.usually.named.self=\u901A\u5E38\u4E00\u4E2A\u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u88AB\u547D\u540D\u4E3A\u201Cself\u201D
INSP.usually.named.$0=\u901A\u5E38\u8FD9\u79CD\u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u88AB\u547D\u540D\u4E3A\u201C{0}\u201D
INSP.first.param.must.not.be.tuple=\u975E\u9759\u6001\u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E0D\u80FD\u662F\u5143\u7EC4

# PyNestedDecoratorsInspection
INSP.NAME.nested.decorators=\u4FEE\u9970\u5668\u6709\u95EE\u9898\u7684\u5D4C\u5957
INSP.decorator.receives.unexpected.builtin=\u8FD9\u4E2A\u88C5\u9970\u5668\u4E0D\u4F1A\u6536\u5230\u5B83\u53EF\u80FD\u671F\u671B\u7684\u53EF\u8C03\u7528\u7684;\u5185\u7F6E\u7684\u88C5\u9970\u5668\u8FD4\u56DE\u4E00\u4E2A\u7279\u6B8A\u7684\u5BF9\u8C61

# PyRedeclarationInspection
INSP.NAME.redeclaration=\u91CD\u65B0\u7533\u62A5\u7684\u540D\u79F0\u6CA1\u6709\u4F7F\u7528
INSP.redeclared.name=\u4E0A\u9762\u5B9A\u4E49\u7684\u201C{0}\u201D\u6CA1\u6709\u4F7F\u7528

# PyUnresolvedReferencesInspection
INSP.NAME.unresolved.refs=\u672A\u89E3\u51B3\u7684\u53C2\u8003
INSP.module.$0.not.found=\u672A\u627E\u5230\u6A21\u5757\u201C{0}\u201D
INSP.unresolved.ref.$0=\u672A\u89E3\u51B3\u7684\u53C2\u8003\u201C{0}\u201D
INSP.unresolved.ref.$0.for.class.$1=\u7C7B\u201C{1}\u201D\u7684\u672A\u89E3\u6790\u5C5E\u6027\u5F15\u7528\u201C{0}\u201D
INSP.cannot.find.$0.in.$1=\u5728\u201C{1}\u201D\u4E2D\u627E\u4E0D\u5230\u5F15\u7528\u201C{0}\u201D
INSP.try.except.import.error=\u201C\u9664\u201DImportError\u5916\u201C\u5728try\u5757\u4E2D\u7684\u201D{0}\u201C\u4E5F\u5E94\u5728except\u5757\u4E2D\u5B9A\u4E49
INSP.unresolved.operator.ref=\u7C7B\u201C{0}\u201D\u6CA1\u6709\u5B9A\u4E49\u201C{1}\u201D\uFF0C\u56E0\u6B64\u4E0D\u80FD\u5728\u5176\u5B9E\u4F8B\u4E0A\u4F7F\u7528\u201C{2}\u201D\u8FD0\u7B97\u7B26

# PyInterpreterInspection
INSP.NAME.invalid.interpreter=\u914D\u7F6E\u7684\u89E3\u91CA\u5668\u65E0\u6548

# ReturnValueFromInitInspection
INSP.NAME.init.return=__init__\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u503C
INSP.cant.return.value.from.init=\u65E0\u6CD5\u4ECE__init__\u8FD4\u56DE\u503C

# PyUnreachableCodeInspection
INSP.NAME.unreachable.code=\u65E0\u6CD5\u8BBF\u95EE\u7684\u4EE3\u7801
INSP.unreachable.code=\u6B64\u4EE3\u7801\u65E0\u6CD5\u8BBF\u95EE

# PyMethodFirstArgAssignmentInspection
INSP.NAME.first.arg.assign=\u91CD\u65B0\u5206\u914D\u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570
INSP.first.arg.$0.assigned=\u65B9\u6CD5\u7684\u53C2\u6570\u201C{0}\u201D\u91CD\u65B0\u5206\u914D

# PyStringFormatInspection
INSP.NAME.str.format=\u5B57\u7B26\u4E32\u683C\u5F0F\u5316\u64CD\u4F5C\u4E2D\u7684\u9519\u8BEF
INSP.format.requires.no.mapping=\u683C\u5F0F\u4E0D\u9700\u8981\u6620\u5C04
INSP.key.$0.has.no.arg=\u952E\u201C{0}\u201D\u6CA1\u6709\u76F8\u5E94\u7684\u53C2\u6570
INSP.unexpected.type.$0=\u610F\u5916\u7684\u7C7B\u578B{0}
INSP.too.few.keys=\u6620\u5C04\u5BC6\u94A5\u592A\u5C11
INSP.no.format.specifier.char=\u683C\u5F0F\u8BF4\u660E\u7B26\u5B57\u7B26\u4E22\u5931
INSP.format.requires.mapping=\u683C\u5F0F\u9700\u8981\u6620\u5C04
INSP.too.many.args.for.fmt.string=\u683C\u5F0F\u5B57\u7B26\u4E32\u7684\u53C2\u6570\u592A\u591A
INSP.too.few.args.for.fmt.string=\u683C\u5F0F\u5B57\u7B26\u4E32\u7684\u53C2\u6570\u592A\u5C11
INSP.incompatible.options=\u5757\u201C{0}\u201D\u4E2D\u7684\u683C\u5F0F\u9009\u9879\u4E0D\u517C\u5BB9
INSP.unused.mapping = \u6620\u5C04\u952E\u201C{0}\u201D\u672A\u4F7F\u7528
INSP.unsupported.format.character=\u4E0D\u652F\u6301\u7684\u683C\u5F0F\u5B57\u7B26\u201C{0}\u201D

# PyMethodOverridingInspection
INSP.NAME.method.over=\u65B9\u6CD5\u7B7E\u540D\u4E0E\u91CD\u5199\u65B9\u6CD5\u7684\u7B7E\u540D\u4E0D\u5339\u914D
INSP.signature.mismatch=\u65B9\u6CD5\u201C{0}\u201D\u7684\u7B7E\u540D\u4E0E\u7C7B\u201C{1}\u201D\u4E2D\u57FA\u65B9\u6CD5\u7684\u7B7E\u540D\u4E0D\u5339\u914D

# PyInitNewSignatureInspection
INSP.NAME.new.init.signature=__new__\u548C__init__\u7684\u4E0D\u517C\u5BB9\u7B7E\u540D
INSP.new.incompatible.to.init=\u7B7E\u540D\u4E0E__init__\u4E0D\u517C\u5BB9
INSP.init.incompatible.to.new=\u7B7E\u540D\u4E0E__new__\u4E0D\u517C\u5BB9

# PyTrailingSemicolonInspection
INSP.NAME.trailing.semicolon=\u5728\u8BED\u53E5\u4E2D\u62D6\u5C3E\u5206\u53F7

# PyUnusedLocalInspection
INSP.NAME.unused=\u672A\u4F7F\u7528\u7684\u672C\u5730
INSP.unused.locals.parameter.isnot.used=\u4E0D\u4F7F\u7528\u53C2\u6570\u201C{0}\u201D\u7684\u503C
INSP.unused.locals.local.variable.isnot.used=\u5C40\u90E8\u53D8\u91CF\u201C{0}\u201D\u7684\u503C\u4E0D\u88AB\u4F7F\u7528
INSP.unused.locals.replace.with.wildcard=\u7528_\u6765\u4EE3\u66FF
INSP.unused.locals.local.function.isnot.used=\u672C\u5730\u51FD\u6570\u201C{0}\u201D\u4E0D\u88AB\u4F7F\u7528
INSP.unused.locals.local.class.isnot.used=\u6CA1\u6709\u4F7F\u7528\u672C\u5730\u7C7B\u201C{0}\u201D

# PyUnboundLocalVariableInspection
INSP.NAME.unbound=\u672A\u7ED1\u5B9A\u7684\u5C40\u90E8\u53D8\u91CF
INSP.unbound.local.variable=\u5C40\u90E8\u53D8\u91CF\u201C{0}\u201D\u53EF\u80FD\u5728\u8D4B\u503C\u4E4B\u524D\u88AB\u5F15\u7528
INSP.unbound.nonlocal.variable=\u975E\u5C40\u90E8\u53D8\u91CF\u201C{0}\u201D\u5FC5\u987B\u7ED1\u5B9A\u5728\u5916\u90E8\u51FD\u6570\u8303\u56F4\u5185
INSP.unbound.name.not.defined=\u540D\u79F0\u201C{0}\u201D\u53EF\u4EE5\u4E0D\u5B9A\u4E49
INSP.unbound.function.too.large=\u51FD\u6570\u201C{0}\u201D\u592A\u5927\u800C\u65E0\u6CD5\u5206\u6790

# PyDictCreationInspection
INSP.NAME.dict.creation=\u5B57\u5178\u521B\u5EFA\u53EF\u4EE5\u901A\u8FC7\u5B57\u5178\u6587\u5B57\u91CD\u5199

# PyListCreationInspection
INSP.NAME.list.creation=\u5217\u8868\u521B\u5EFA\u53EF\u4EE5\u901A\u8FC7\u5217\u8868\u6587\u5B57\u91CD\u5199

# PyExceptClausesOrderInspection
INSP.NAME.bad.except.clauses.order=\u9664\u4E86\u5B50\u53E5\u987A\u5E8F\u4EE5\u5916
INSP.class.$0.already.caught=\u5F02\u5E38\u7C7B\u201C{0}\u201D\u5DF2\u88AB\u6355\u83B7
INSP.class.$0.superclass.$1.already.caught=\u201C{0}\u201D\uFF0C\u5F02\u5E38\u7C7B\u201C{1}\u201D\u7684\u8D85\u7C7B\u5DF2\u7ECF\u88AB\u6355\u83B7

# PyTupleAssignmentBalanceInspection
INSP.NAME.incorrect.assignment=\u5143\u7EC4\u5206\u914D\u5E73\u8861\u4E0D\u6B63\u786E

# PyClassicStyleClassInspection
INSP.NAME.classic.class.usage=\u7ECF\u5178\u98CE\u683C\u7C7B\u7684\u7528\u6CD5
INSP.classic.class.usage.old.style.class=\u8001\u5F0F\u8BFE\u5802
INSP.classic.class.usage.old.style.class.ancestors=\u65E7\u5F0F\u7684\u8BFE\u7A0B\uFF0C\u56E0\u4E3A\u5B83\u6240\u7EE7\u627F\u7684\u6240\u6709\u8BFE\u7A0B\u90FD\u662F\u65E7\u5F0F\u8BFE\u7A0B


# PyExceptionInheritance
INSP.NAME.exception.not.inherit=\u5F02\u5E38\u4E0D\u4F1A\u4ECE\u6807\u51C6\u7684\u201CException\u201D\u7C7B\u7EE7\u627F

# PyDefaultArgumentInspection
INSP.NAME.default.argument=\u9ED8\u8BA4\u53C2\u6570\u662F\u53EF\u53D8\u7684

# PyRaisingNewStyleClassInspection
INSP.NAME.raising.new.style.class=\u57F9\u517B\u4E00\u4E2A\u65B0\u7684\u98CE\u683C\u73ED

# PyIncorrectDocstringInspection
INSP.NAME.incorrect.docstring=\u4E0D\u6B63\u786E\u7684\u6587\u6863\u5B57\u7B26\u4E32
INSP.missing.parameter.in.docstring=\u6587\u6863\u5B57\u7B26\u4E32\u4E2D\u7F3A\u5C11\u53C2\u6570{0}
INSP.unexpected.parameter.in.docstring=\u6587\u6863\u5B57\u7B26\u4E32\u4E2D\u7684\u610F\u5916\u53C2\u6570{0}

# PyMissingOrEmptyDocstringInspection
INSP.NAME.missing.or.empty.docstring=\u7F3A\u5C11\u6216\u7A7A\u6587\u6863\u5B57\u7B26\u4E32
INSP.no.docstring=\u7F3A\u5C11\u6587\u6863\u5B57\u7B26\u4E32
INSP.empty.docstring=\u7A7A\u7684\u6587\u6863\u5B57\u7B26\u4E32

# PyDocstringTypesInspection
INSP.NAME.docstring.types=\u8F93\u5165\u6587\u6863\u5B57\u7B26\u4E32\u4E0E\u63A8\u65AD\u7684\u7C7B\u578B\u4E0D\u5339\u914D

# PyStatementEffectInspection
INSP.NAME.statement.effect=\u58F0\u660E\u4E0D\u8D77\u4F5C\u7528
INSP.NAME.statement.message=\u58F0\u660E\u4F3C\u4E4E\u6CA1\u6709\u6548\u679C

# PySimplifyBooleanCheckInspection
INSP.NAME.check.can.be.simplified=\u5E03\u5C14\u53D8\u91CF\u68C0\u67E5\u53EF\u4EE5\u7B80\u5316
INSP.expression.can.be.simplified=\u8868\u8FBE\u53EF\u4EE5\u7B80\u5316

# PyFromFutureImportInspection
INSP.NAME.from.future.import=\u4ECE__future__\u5BFC\u5165\u5FC5\u987B\u662F\u7B2C\u4E00\u4E2A\u53EF\u6267\u884C\u8BED\u53E5

# PyComparisonWithNoneInspection
INSP.NAME.comparison.with.none=\u6CA1\u6709\u4E0E\u5E73\u7B49\u8FD0\u8425\u5546\u8FDB\u884C\u6BD4\u8F83

# PyStringExceptionInspection
INSP.NAME.raising.string.exception=\u5F15\u53D1\u5B57\u7B26\u4E32\u5F02\u5E38

# PySuperArgumentsInspection
INSP.NAME.wrong.super.arguments=\u9519\u8BEF\u7684\u53C2\u6570\u6765\u8C03\u7528\u8D85\u7EA7
INSP.$0.is.not.superclass.of.$1=\u201C{0}\u201D\u4E0D\u662F\u201C{1}\u201D\u7684\u5B9E\u4F8B\u6216\u5B50\u7C7B

# PyByteLiteralInspection
INSP.NAME.byte.literal=\u5B57\u8282\u6587\u5B57\u5305\u542B\u5927\u4E8E255\u7684\u5B57\u7B26

# PynonAsciiCharInspection
INSP.NAME.non.ascii=\u6587\u4EF6\u5305\u542B\u975EASCII\u5B57\u7B26

# PyMandatoryEncodingInspection
INSP.NAME.mandatory.encoding=\u6CA1\u6709\u4E3A\u6587\u4EF6\u6307\u5B9A\u7F16\u7801

# PyTupleItemAssignmentInspection
INSP.NAME.tuple.item.assignment=\u5143\u7EC4\u9879\u76EE\u5206\u914D
INSP.tuples.never.assign.items=\u5143\u7EC4\u4E0D\u652F\u6301\u9879\u76EE\u5206\u914D

# PyPropertyAccessInspection
INSP.NAME.property.access=\u8BBF\u95EE\u5C5E\u6027
INSP.property.$0.cant.be.set=\u5C5E\u6027\u201C{0}\u201D\u65E0\u6CD5\u8BBE\u7F6E
INSP.property.$0.cant.be.read=\u5C5E\u6027\u201C{0}\u201D\u65E0\u6CD5\u8BFB\u53D6
INSP.property.$0.cant.be.deleted=\u5C5E\u6027\u201C{0}\u201D\u65E0\u6CD5\u5220\u9664

# PyPropertyDefinitionInspection
INSP.NAME.property.definition=\u5C5E\u6027\u5B9A\u4E49
INSP.doc.param.should.be.str=doc\u53C2\u6570\u5E94\u8BE5\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32
INSP.strange.arg.want.callable=\u5947\u602A\u7684\u8BF4\u6CD5;\u9884\u8BA1\u53EF\u8C03\u7528
INSP.func.property.name.mismatch=\u51FD\u6570\u548C\u88C5\u9970\u5668\u540D\u79F0\u4E0D\u5339\u914D;\u5C5E\u6027\u8BBF\u95EE\u5668\u4E0D\u88AB\u521B\u5EFA
INSP.getter.return.smth=Getter\u5E94\u8BE5\u8FD4\u56DE\u6216\u4EA7\u751F\u4E00\u4E9B\u4E1C\u897F
INSP.setter.should.not.return=Setter\u4E0D\u5E94\u8BE5\u8FD4\u56DE\u4E00\u4E2A\u503C
INSP.deleter.should.not.return=Deleter\u4E0D\u5E94\u8BE5\u8FD4\u56DE\u4E00\u4E2A\u503C
INSP.getter.signature.advice=Getter\u7B7E\u540D\u5E94\u8BE5\u662F(self\uFF09
INSP.setter.signature.advice=\u4E8C\u4F20\u624B\u7B7E\u540D\u5E94\u8BE5\u662F(\u81EA\u6211\uFF0C\u4EF7\u503C\uFF09
INSP.deleter.signature.advice=\u5220\u9664\u8005\u7B7E\u540D\u5E94\u8BE5\u662F(self\uFF09
INSP.accessor.first.param.is.$0=\u8BBF\u95EE\u8005\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u901A\u5E38\u88AB\u79F0\u4E3A\u201C{0}\u201D

# PyCallByClassInspection
INSP.NAME.different.class.call=\u4F7F\u7528\u4E0D\u540C\u7C7B\u7684\u5B9E\u4F8B\u6309\u7C7B\u8C03\u7528\u65B9\u6CD5
INSP.instance.of.$0.excpected=\u671F\u671B{0}\u7684\u5B9E\u4F8B\uFF0C\u800C\u4E0D\u662F\u7C7B\u672C\u8EAB
INSP.passing.$0.instead.of.$1=\u4F20\u9012{0}\u800C\u4E0D\u662F{1}\u3002\u8FD9\u662F\u6545\u610F\u7684\u5417\uFF1F

# PyBroadExceptionInspection
INSP.NAME.too.broad.exception.clauses=\u8FC7\u4E8E\u5BBD\u6CDB\u7684\u4F8B\u5916\u6761\u6B3E

# PyDictDuplicateKeysInspection
INSP.NAME.duplicate.keys=\u5B57\u5178\u5305\u542B\u91CD\u590D\u7684\u952E

# PyRedundantParenthesesInspection
INSP.NAME.redundant.parentheses=\u5197\u4F59\u7684\u62EC\u53F7

# PyAugmentAssignmentInspection
INSP.NAME.augment.assignment=\u5206\u914D\u53EF\u4EE5\u7528\u6269\u5145\u5206\u914D\u6765\u4EE3\u66FF

# PyChainedComparsonsInspection
INSP.NAME.chained.comparisons=\u94FE\u63A5\u6BD4\u8F83\u53EF\u4EE5\u7B80\u5316

# PyAttributeOutsideInitInspection
INSP.NAME.attribute.outside.init=\u5728__init__\u4E4B\u5916\u5B9A\u4E49\u7684\u5B9E\u4F8B\u5C5E\u6027
INSP.attribute.$0.outside.init=\u5728__init__\u4E4B\u5916\u5B9A\u4E49\u7684\u5B9E\u4F8B\u5C5E\u6027{0}

# PyProtectedMemberInspection
INSP.protected.member.$0.access=\u8BBF\u95EE\u53D7\u4FDD\u62A4\u7684\u6210\u5458{0}\u7684\u7C7B
INSP.protected.member.$0.access.module=\u8BBF\u95EE\u6A21\u5757\u7684\u53D7\u4FDD\u62A4\u6210\u5458{0}

# PyArgumentEqualDefaultInspection
INSP.NAME.argument.equal.default=\u4F20\u9012\u7ED9\u51FD\u6570\u7684\u53C2\u6570\u7B49\u4E8E\u9ED8\u8BA4\u53C2\u6570\u503C
INSP.argument.equals.to.default=\u53C2\u6570\u7B49\u4E8E\u9ED8\u8BA4\u53C2\u6570\u503C

# PyAbstractClassInspection
INSP.NAME.abstract.class=\u7C7B\u5FC5\u987B\u5B9E\u73B0\u6240\u6709\u7684\u62BD\u8C61\u65B9\u6CD5
INSP.NAME.abstract.class.$0.must.implement=\u7C7B{0}\u5FC5\u987B\u5B9E\u73B0\u6240\u6709\u7684\u62BD\u8C61\u65B9\u6CD5

# PyOldStyleClassesInspection
INSP.NAME.oldstyle.class=\u65E7\u5F0F\u73ED\u7EA7\u5305\u542B\u65B0\u5F0F\u73ED\u7EA7\u7279\u5F81
INSP.oldstyle.class.slots=\u65E7\u5F0F\u7C7B\u5305\u542B__slots__\u5B9A\u4E49
INSP.oldstyle.class.getattribute=\u65E7\u5F0F\u7C7B\u5305\u542B__getattribute__\u5B9A\u4E49
INSP.oldstyle.class.super=\u65E7\u5F0F\u7684\u7C7B\u5305\u542B\u8D85\u7EA7\u65B9\u6CD5\u7684\u8C03\u7528

# PyCompatibilityInspection
INSP.NAME.compatibility=\u4EE3\u7801\u517C\u5BB9\u6027\u68C0\u67E5

# PyUnnecessaryBackslashInspection
INSP.NAME.unnecessary.backslash=\u4E0D\u5FC5\u8981\u7684\u53CD\u659C\u6760

# PySingleQuotedDocstringInspection
INSP.NAME.single.quoted.docstring=\u5355\u5F15\u53F7\u6587\u6863\u5B57\u7B26\u4E32
INSP.message.single.quoted.docstring=\u4E09\u91CD\u53CC\u5F15\u53F7\u7684\u5B57\u7B26\u4E32\u5E94\u8BE5\u7528\u4E8Edocstrings\u3002

# PyMissingConstructorInspection
INSP.NAME.missing.super.constructor=\u9519\u8FC7\u4E86\u5BF9\u8D85\u7C7B\u7684__init__\u7684\u8C03\u7528
INSP.missing.super.constructor.message=\u8C03\u7528\u8D85\u7C7B\u7684__init__\u662F\u9519\u8FC7\u7684

# PySetFunctionToLiteralInspection
INSP.NAME.set.function.to.literal=\u51FD\u6570\u8C03\u7528\u53EF\u4EE5\u7528set literal\u6765\u66FF\u6362

# PyDecoratorInspection
INSP.NAME.decorator.outside.class=\u7C7B\u5916\u90E8\u65B9\u6CD5\u7684\u7C7B\u7279\u5B9A\u88C5\u9970\u5668

# PyPackageRequirementsInspection
INSP.NAME.requirements=\u5305\u88C5\u8981\u6C42

# PyMethodMayBeStaticInspection
INSP.NAME.method.may.be.static=\u65B9\u6CD5\u53EF\u80FD\u662F\u9759\u6001\u7684
INSP.method.may.be.static=\u65B9\u6CD5<code> #ref </code>\u53EF\u80FD\u662F'static'

# PyClassHasNoInitInspection
INSP.NAME.class.has.no.init=\u7C7B\u6CA1\u6709__init__\u65B9\u6CD5
INSP.class.has.no.init=\u7C7B\u6CA1\u6709__init__\u65B9\u6CD5
INSP.parent.$0.has.no.init=\u7236\u9879\u201C{0}\u201D\u6CA1\u6709__init__\u65B9\u6CD5

#PyNoneFunctionAssignmentInspection
INSP.NAME.none.function.assignment=\u6307\u5B9A\u4E0D\u8FD4\u56DE\u4EFB\u4F55\u4E1C\u897F\u7684\u51FD\u6570\u8C03\u7528(\u65E0\uFF09
INSP.none.function.assignment=\u51FD\u6570\u201C{0}\u201D\u4E0D\u8FD4\u56DE\u4EFB\u4F55\u5185\u5BB9

#PyGlobalUndefinedInspection
INSP.NAME.global.undefined=\u5168\u5C40\u53D8\u91CF\u5728\u6A21\u5757\u7EA7\u522B\u662F\u672A\u5B9A\u4E49\u7684
INSP.NAME.global.$0.undefined=\u5168\u5C40\u53D8\u91CF\u201C{0}\u201D\u5728\u6A21\u5757\u7EA7\u522B\u662F\u672A\u5B9A\u4E49\u7684

#PyAssignmentToLoopOrWithParameterInspection
INSP.NAME.assignment.to.loop.or.with.parameter.display.name=\u8D4B\u503C\u7ED9'for'\u5FAA\u73AF\u6216'with'\u8BED\u53E5\u53C2\u6570
INSP.NAME.assignment.to.loop.or.with.parameter.display.message=\u5DF2\u5728''\u4E2D\u4E3A''\u5FAA\u73AF\u6216''\u7528''\u8BED\u53E5\u5728\u4E0A\u9762\u58F0\u660E\u4E86\u53D8\u91CF\u201C{0}\u201D

# Refactoring
refactoring.will.not.be.accessible=\u6210\u5458\uFF0C\u60A8\u5C1D\u8BD5\u79FB\u52A8\u53D6\u51B3\u4E8E\u201C{0}\u201D\uFF0C\u5728\u91CD\u6784\u540E\u5C06\u65E0\u6CD5\u8BBF\u95EE
refactoring.error.file.exists=\u6587\u4EF6\u201C{0}\u201D\u5DF2\u7ECF\u5B58\u5728
refactoring.error.directory.exists=\u76EE\u5F55\u201C{0}\u201D\u5DF2\u7ECF\u5B58\u5728

# introduce
refactoring.introduce.name.error=\u540D\u5B57\u4E0D\u6B63\u786E
refactoring.introduce.selection.error=\u65E0\u6CD5\u4F7F\u7528\u6240\u9009\u5143\u7D20\u6267\u884C\u91CD\u6784

# introduce variable
refactoring.introduce.variable.dialog.title=\u63D0\u53D6\u53D8\u91CF
refactoring.introduce.variable.scope.error=\u540D\u79F0\u4E0E\u73B0\u6709\u53D8\u91CF\u6216\u53C2\u6570\u51B2\u7A81

# introduce constant
refactoring.introduce.constant.dialog.title=\u63D0\u53D6\u5E38\u91CF
refactoring.introduce.constant.scope.error=\u540D\u79F0\u5DF2\u5728\u8303\u56F4\u5185\u58F0\u660E

# introduce parameter
refactoring.introduce.parameter.dialog.title=\u63D0\u53D6\u53C2\u6570

# pull up
refactoring.pull.up.dialog.title=\u628A\u6210\u5458\u62C9\u5230
refactoring.pull.up.dialog.move.members.to.class=\u5C06\u6210\u5458\u79FB\u5230\u8BFE\u5802\u4E0A
refactoring.pull.up.dialog.members.to.be.moved=\u4EE5\u4E0B\u6210\u5458\u5C06\u88AB\u79FB\u52A8
refactoring.pull.up.error.cannot.perform.refactoring.using.selected.elements=\u4F7F\u7528\u9009\u5B9A\u7684\u5143\u7D20\u65E0\u6CD5\u6267\u884C\u62C9\u52A8\u6210\u5458
refactoring.pull.up.error.cannot.perform.refactoring.not.inside.class=\u4E0D\u80FD\u6267\u884C\u62C9\u6210\u5458\uFF1A\u4E0D\u5728\u8BFE\u5802\u5185
refactoring.pull.up.error.cannot.perform.refactoring.no.base.classes=\u7C7B{0}\u6CA1\u6709\u8D85\u7C7B\uFF0C\u6216\u8005\u5B83\u4EEC\u90FD\u4E0D\u80FD\u7528\u4E8E\u91CD\u6784

# push down
refactoring.push.down.dialog.title=\u63A8\u4ECE\u4E0B\u9762\u7684\u6210\u5458
refactoring.push.down.error.cannot.perform.refactoring.using.selected.elements=\u4F7F\u7528\u9009\u5B9A\u5143\u7D20\u65E0\u6CD5\u6267\u884C\u63A8\u9001\u6210\u5458
refactoring.push.down.error.cannot.perform.refactoring.not.inside.class=\u4E0D\u80FD\u6267\u884Cpull\u6210\u5458\uFF1A\u4E0D\u5728\u8BFE\u5802\u5185

# inline
refactoring.inline.local.multiassignment=\u5B9A\u4E49\u5728\u591A\u91CD\u5206\u914D\u4E2D

# extract method
refactoring.extract.method=\u63D0\u53D6\u65B9\u6CD5
refactoring.extract.method.error.interrupted.execution.flow=\u6267\u884C\u6D41\u7A0B\u4E2D\u65AD\u65F6\u65E0\u6CD5\u6267\u884C\u91CD\u6784
refactoring.extract.method.error.star.import=\u4EE3\u7801\u5757\u5185\u7684\u661F\u5F62\u5BFC\u5165\u8BED\u53E5\u4E0D\u80FD\u6267\u884C\u91CD\u6784
refactoring.extract.method.error.bad.selection=\u65E0\u6CD5\u4F7F\u7528\u6240\u9009\u5143\u7D20\u6267\u884C\u63D0\u53D6\u65B9\u6CD5
refactoring.extract.method.error.name.clash=\u65B9\u6CD5\u540D\u79F0\u4E0E\u73B0\u6709\u540D\u79F0\u51B2\u7A81
refactoring.extract.method.error.returns=\u4EE3\u7801\u7247\u6BB5\u4E2D\u4E0D\u80FD\u63D0\u53D6\u8FD4\u56DE\u6307\u4EE4\u7684\u65B9\u6CD5
refactoring.extract.method.error.local.variable.modifications=\u4E0D\u80FD\u4ECE\u4EE3\u7801\u7247\u6BB5\u4E2D\u7684\u5C40\u90E8\u53D8\u91CF\u4FEE\u6539\u8868\u8FBE\u5F0F\u8FDB\u884C\u91CD\u6784
refactoring.extract.method.error.local.variable.modifications.and.returns=\u4E0D\u80FD\u4F7F\u7528\u5C40\u90E8\u53D8\u91CF\u4FEE\u9970\u4ECE\u8868\u8FBE\u5F0F\u8FDB\u884C\u91CD\u6784\uFF0C\u5E76\u5728\u4EE3\u7801\u7247\u6BB5\u5185\u8FD4\u56DE\u6307\u4EE4
refactoring.extract.method.error.empty.fragment=\u4E0D\u80FD\u4ECE\u7A7A\u4EE3\u7801\u7247\u6BB5\u6267\u884C\u91CD\u6784
refactoring.extract.method.error.undetermined.execution.flow=\u65E0\u6CD5\u786E\u5B9A\u4EE3\u7801\u7247\u6BB5\u7684\u6267\u884C\u6D41\u7A0B
refactoring.extract.method.error.yield=\u4EE3\u7801\u5757\u4E2D\u7684'yield'\u8BED\u53E5\u4E0D\u80FD\u6267\u884C\u91CD\u6784
refactoring.extract.method.error.class.level=\u4E0D\u80FD\u5728\u8BFE\u5802\u4E0A\u8FDB\u884C\u91CD\u6784


# extract superclass
refactoring.extract.super.target.path.outside.roots=\u76EE\u6807\u76EE\u5F55\u5728\u9879\u76EE\u4E4B\u5916\u3002\u5FC5\u987B\u4F4D\u4E8E\u5185\u5BB9\u6839\u76EE\u5F55\u5185
refactoring.extract.super.target.class.already.exists=\u7C7B\u201C{0}\u201D\u5DF2\u7ECF\u5B58\u5728\u4E8E\u8FD9\u4E2A\u6A21\u5757\u4E2D
refactoring.extract.super.name.0.must.be.ident=\u540D\u79F0\u201C{0}\u201D\u65E0\u6548\u3002\u5FC5\u987B\u662F\u6709\u6548\u7684Python\u6807\u8BC6\u7B26
refactoring.extract.super.class.no.members.allowed=\u6CA1\u6709\u4EFB\u4F55\u6210\u5458\u53EF\u4EE5\u88AB\u63D0\u53D6

# move
refactoring.move.choose.destination.file.title=\u9009\u62E9\u76EE\u6807\u6587\u4EF6
refactoring.move.error.destination.file.contains.class.$0=\u76EE\u6807\u6587\u4EF6\u5DF2\u7ECF\u5305\u542B\u540D\u4E3A\u201C{0}\u201D\u7684\u7C7B
refactoring.move.error.destination.file.contains.function.$0=\u76EE\u6807\u6587\u4EF6\u5DF2\u5305\u542B\u540D\u4E3A\u201C{0}\u201D\u7684\u51FD\u6570
refactoring.move.error.destination.file.contains.global.variable.$0=\u76EE\u6807\u6587\u4EF6\u5DF2\u5305\u542B\u540D\u4E3A\u201C{0}\u201D\u7684\u5168\u5C40\u53D8\u91CF
refactoring.move.error.cannot.use.module.name.$0=\u5728\u5BFC\u5165\u4E2D\u4E0D\u80FD\u4F7F\u7528\u6A21\u5757\u540D\u79F0\u201C{0}\u201D

# move module members (top-level)
refactoring.move.module.members=\u79FB\u52A8\u6A21\u5757\u6210\u5458
refactoring.move.module.members.dialog.title=\u79FB\u52A8\u6A21\u5757\u6210\u5458
refactoring.move.module.members.dialog.table.title=\u6279\u91CF\u79FB\u52A8(&M)
refactoring.move.module.members.dialog.description.class=\u79FB\u52A8\u7C7B{0}
refactoring.move.module.members.dialog.description.function=\u79FB\u52A8\u529F\u80FD{0}
refactoring.move.module.members.dialog.description.variable=\u79FB\u52A8\u5168\u5C40\u53D8\u91CF{0}
refactoring.move.module.members.dialog.description.selection=\u79FB\u52A8\u9009\u5B9A\u7684\u5143\u7D20
refactoring.move.module.members.error.cannot.place.elements.into.nonpython.file=\u4E0D\u80FD\u5C06\u5143\u7D20\u653E\u7F6E\u5230\u975EPython\u6587\u4EF6\u4E2D
refactoring.move.module.members.error.selection=\u65E0\u6CD5\u4F7F\u7528\u6240\u9009\u5143\u7D20\u6267\u884C\u91CD\u6784

# Make function top-level
refactoring.make.method.top.level.dialog.title=\u4F7F\u65B9\u6CD5\u9876\u7EA7
refactoring.make.method.top.level.dialog.description=\u5C06\u65B9\u6CD5{0}\u79FB\u5230\u9876\u5C42

refactoring.make.local.function.top.level.dialog.title=\u4F7F\u672C\u5730\u529F\u80FD\u8FBE\u5230\u9876\u7EA7\u6C34\u5E73
refactoring.make.local.function.top.level.dialog.description=\u5C06\u672C\u5730\u51FD\u6570{0}\u79FB\u5230\u9876\u5C42

refactoring.make.function.top.level.error.nonlocal.writes=\u4E0D\u80FD\u79FB\u52A8\u975E\u5C40\u90E8\u5199\u5165\u529F\u80FD
refactoring.make.function.top.level.error.self.reads=\u4E0D\u80FD\u4ECE\u5916\u90E8\u8303\u56F4\u79FB\u52A8\u5305\u542B\u201C\u81EA\u6211\u201D\u53C2\u6570\u7528\u6CD5\u7684\u51FD\u6570
refactoring.make.function.top.level.error.outer.scope.reads=\u5927\u70AE\u79FB\u52A8\u4ECE\u5916\u90E8\u8303\u56F4\u5F15\u7528\u540D\u79F0\u7684\u65B9\u6CD5
refactoring.make.function.top.level.error.private.attributes=\u4E0D\u80FD\u79FB\u52A8\u5F15\u7528\u79C1\u6709\u5B9E\u4F8B\u5C5E\u6027\u7684\u65B9\u6CD5
refactoring.make.function.top.level.error.attribute.writes=\u65E0\u6CD5\u79FB\u52A8\u5199\u5165\u5B9E\u4F8B\u5C5E\u6027\u7684\u65B9\u6CD5
refactoring.make.function.top.level.error.method.calls=\u65E0\u6CD5\u79FB\u52A8\u8C03\u7528\u540C\u4E00\u7C7B\u7684\u5176\u4ED6\u65B9\u6CD5\u7684\u65B9\u6CD5
refactoring.make.function.top.level.error.special.usage.of.self=\u4E0D\u80FD\u79FB\u52A8\u5305\u542B\u201C\u81EA\u6211\u201D\u53C2\u6570\u7684\u7279\u6B8A\u7528\u6CD5\u7684\u65B9\u6CD5



#change signature
refactoring.change.signature.usage.view.declarations.header=\u51FD\u6570\u88AB\u91CD\u6784
refactoring.change.signature.dialog.validation.name.defined=\u540D\u79F0\u5DF2\u5728\u8303\u56F4\u5185\u5B9A\u4E49
refactoring.change.signature.dialog.validation.function.name=\u51FD\u6570\u540D\u79F0\u4E0D\u6B63\u786E
refactoring.change.signature.dialog.validation.parameter.name=\u53C2\u6570\u540D\u79F0\u4E0D\u6B63\u786E
refactoring.change.signature.dialog.validation.multiple.star=\u591A\u4E2A*\u53C2\u6570\u662F\u4E0D\u5141\u8BB8\u7684
refactoring.change.signature.dialog.validation.multiple.double.star=\u591A\u4E2A**\u53C2\u6570\u662F\u4E0D\u5141\u8BB8\u7684
refactoring.change.signature.dialog.validation.default.missing=\u7F3A\u7701\u503C\u7F3A\u5931
refactoring.change.signature.dialog.validation.parameter.missing=\u53C2\u6570\u540D\u79F0\u4E22\u5931
refactoring.change.signature.dialog.default.value.checkbox=\u5728\u7B7E\u540D\u4E2D\u4F7F\u7528\u9ED8\u8BA4\u503C:
refactoring.change.signature.dialog.default.value.label=\u9ED8\u8BA4\u503C:
refactoring.change.signature.dialog.name.label=\u540D\u79F0:
refactoring.change.signature.find.usages.of.base.class={1}\u7C7B\u7684\u65B9\u6CD5{0}\n\u8986\u76D6\u7C7B{2}\u7684\u65B9\u6CD5\u3002\n\u4F60\u60F3\u91CD\u6784\u7684\u57FA\u672C\u65B9\u6CD5\uFF1F
refactoring.change.signature.error.wrong.caret.position.method.name=\u8131\u5B57\u7B26\u5E94\u8BE5\u88AB\u5B9A\u4F4D\u5728\u8981\u88AB\u91CD\u6784\u7684\u65B9\u6CD5\u7684\u540D\u5B57\u4E0A
refactoring.change.signature.error.lambda.call=Caret\u5B9A\u4F4D\u5728lambda\u7535\u8BDD\u4E0A
refactoring.change.signature.error.tuple.parameters=\u51FD\u6570\u5305\u542B\u5143\u7EC4\u53C2\u6570
refactoring.change.signature.error.not.under.source.root=\u51FD\u6570\u4E0D\u5728\u6E90\u4EE3\u7801\u6839\u76EE\u5F55\u4E0B

# convert module to package
refactoring.convert.module.to.package.title=\u5C06\u6A21\u5757\u8F6C\u6362\u4E3A\u5305

# convert module
refactoring.convert.package.to.module.title=\u5C06\u6A21\u5757\u8F6C\u6362\u4E3A\u5305
refactoring.convert.package.to.module.error.not.empty.package=\u5305\u201C{0}\u201D\u4E0D\u4E3A\u7A7A


### Annotators ###
ANN.deleting.none=\u5220\u9664\u65E0
ANN.assign.to.none=\u5206\u914D\u7ED9\u65E0
ANN.cant.assign.to.call=\u4E0D\u80FD\u5206\u914D\u7ED9\u51FD\u6570\u8C03\u7528
ANN.cant.delete.call=\u65E0\u6CD5\u5220\u9664\u51FD\u6570\u8C03\u7528
ANN.cant.aug.assign.to.generator=\u589E\u5F3A\u5206\u914D\u7ED9\u751F\u6210\u5668\u8868\u8FBE\u5F0F\u662F\u4E0D\u53EF\u80FD\u7684
ANN.cant.aug.assign.to.tuple.or.generator=\u589E\u5F3A\u5206\u914D\u7ED9\u5143\u7EC4\u6587\u5B57\u6216\u751F\u6210\u5668\u8868\u8FBE\u5F0F\u662F\u4E0D\u53EF\u80FD\u7684
ANN.cant.assign.to.generator=\u5206\u914D\u7ED9\u751F\u6210\u5668\u8868\u8FBE\u5F0F\u662F\u4E0D\u53EF\u80FD\u7684
ANN.cant.assign.to.operator=\u4E0D\u80FD\u5206\u914D\u7ED9\u64CD\u4F5C\u5458
ANN.cant.assign.to.parens=\u65E0\u6CD5\u6307\u5B9A\u7ED9()
ANN.cant.assign.to.brackets=\u65E0\u6CD5\u6307\u5B9A\u7ED9[]
ANN.cant.aug.assign.to.list.or.comprh=\u589E\u5F3A\u5206\u914D\u5217\u51FA\u6587\u5B57\u6216\u7406\u89E3\u4E0D\u53EF\u80FD
ANN.cant.assign.to.comprh=\u65E0\u6CD5\u5206\u914D\u7ED9\u5217\u8868\u7406\u89E3
ANN.cant.assign.to.dict.comprh=\u4E0D\u80FD\u5206\u914D\u7ED9\u8BCD\u5178\u7684\u7406\u89E3
ANN.cant.assign.to.set.comprh=\u4E0D\u80FD\u5206\u914D\u7ED9\u7406\u89E3
ANN.cant.aug.assign.to.comprh=\u589E\u5F3A\u5206\u914D\u5217\u8868\u7406\u89E3\u4E0D\u53EF\u80FD
ANN.cant.aug.assign.to.dict.comprh=\u589E\u5F3A\u5206\u914D\u5BF9\u8BCD\u5178\u7684\u7406\u89E3\u662F\u4E0D\u53EF\u80FD\u7684
ANN.cant.aug.assign.to.set.comprh=\u589E\u5F3A\u5206\u914D\u4E0D\u80FD\u8BBE\u7F6E\u7406\u89E3
ANN.cant.assign.to.literal=\u4E0D\u80FD\u5206\u914D\u7ED9\u6587\u5B57
ANN.cant.delete.literal=\u65E0\u6CD5\u5220\u9664\u6587\u5B57
ANN.cant.assign.to.lambda=\u4E0D\u80FD\u5206\u914D\u7ED9lambda

ANN.break.outside.loop=\u201C\u5FAA\u73AF\u201D\u5916
ANN.continue.outside.loop='\u7EE7\u7EED'\u5916\u90E8\u5FAA\u73AF
ANN.cant.continue.in.finally='finally'\u5B50\u53E5\u4E2D\u4E0D\u652F\u6301'continue'
ANN.default.except.must.be.last=\u9ED8\u8BA4'\u9664\u4E86\uFF1A'\u5FC5\u987B\u662F\u6700\u540E\u4E00\u4E2A

ANN.$0.both.global.and.param=\u540D\u79F0\u201C{0}\u201D\u7528\u4F5C\u53C2\u6570\u548C\u5168\u5C40
ANN.$0.assigned.before.global.decl=\u5728\u5168\u5C40\u58F0\u660E\u4E4B\u524D\u5206\u914D\u540D\u79F0\u201C{0}\u201D

ANN.duplicate.param.name=\u91CD\u590D\u7684\u53C2\u6570\u540D\u79F0
ANN.starred.param.after.kwparam=**\u53C2\u6570\u540E\u9762\u7684\u53C2\u6570
ANN.regular.param.after.vararg=*\u53C2\u6570\u540E\u7684\u5E38\u89C4\u53C2\u6570
ANN.regular.param.after.keyword=**\u53C2\u6570\u540E\u7684\u5E38\u89C4\u53C2\u6570
ANN.non.default.param.after.default=\u975E\u9ED8\u8BA4\u53C2\u6570\u9075\u5FAA\u9ED8\u8BA4\u53C2\u6570
ANN.named.parameters.after.star=\u547D\u540D\u53C2\u6570\u5FC5\u987B\u9075\u5FAA\u88F8*
ANN.tuple.py3=Python 3\u4E0D\u652F\u6301\u5143\u7EC4\u53C2\u6570\u89E3\u5305
ANN.multiple.args=\u591A\u4E2A*\u53C2\u6570\u662F\u4E0D\u5141\u8BB8\u7684
ANN.multiple.kwargs=\u591A\u4E2A**\u53C2\u6570\u662F\u4E0D\u5141\u8BB8\u7684

ANN.star.import.at.top.only='import *'\u53EA\u5141\u8BB8\u5728\u6A21\u5757\u7EA7\u522B

ANN.missing.closing.quote=\u7F3A\u5C11\u7ED3\u675F\u8BED[{0}]
ANN.missing.closing.triple.quotes=\u7F3A\u5C11\u5173\u95ED\u4E09\u91CD\u5F15\u53F7

ANN.method.$0.removed.use.$1=\u65B9\u6CD5\u201C{0}\u201D\u5DF2\u88AB\u79FB\u9664\uFF0C\u8BF7\u6539\u4E3A\u4F7F\u7528\u201C{1}\u201D
ANN.method.$0.removed=\u65B9\u6CD5\u201C{0}\u201D\u5DF2\u5220\u9664

### parsing
PARSE.expected.expression=\u8868\u8FBE\u9884\u671F
PARSE.expected.rbracket=']'\u9884\u8BA1
PARSE.expected.expr.or.comma.or.bracket=\u9884\u671F\u7684\u8868\u8FBE\uFF0C'\uFF0C'\u6216']'
PARSE.expected.in=\u9884\u671F\u4E2D
PARSE.expected.for.or.bracket=']'\u6216'for'\u9884\u671F
PARSE.expected.comma='\uFF0C'\u9884\u8BA1
PARSE.expected.colon='\uFF1A'\u9884\u8BA1
PARSE.expected.rpar='\uFF09'\u9884\u8BA1
PARSE.expected.lpar='('\u9884\u8BA1
PARSE.expected.rbrace='}'\u9884\u8BA1
PARSE.expected.tick=\u201C(\u53CD\u5411\uFF09\u9884\u8BA1
PARSE.expected.name=\u9884\u671F\u7684\u540D\u5B57
PARSE.expected.colon.or.rbracket='\uFF1A'\u6216']'\u9884\u8BA1
PARSE.expected.comma.or.rpar='\uFF0C'\u6216'\uFF09'
PARSE.expected.else=\u201C\u5176\u4ED6\u201D\u9884\u8BA1

PARSE.expected.identifier=\u6807\u8BC6\u7B26\u9884\u671F
PARSE.expected.comma.lpar.rpar='\uFF0C'\u6216'('\u6216'\uFF09'
PARSE.expected.statement.break=\u58F0\u660E\u4E2D\u65AD\u9884\u8BA1
PARSE.expected.@.or.def=\u671F\u671B\u201C@\u201D\u6216\u201Cdef\u201D
PARSE.expected.formal.param.name=\u9884\u671F\u7684\u5F62\u5F0F\u53C2\u6570\u540D\u79F0

### qiuck doc generator
QDOC.copied.from.$0.$1=<i>\u6587\u6863\u7F3A\u5931\u3002</i>\u4EE5\u4E0B\u5185\u5BB9\u662F\u4ECE<code> {0}\u3002{1} </code>\u590D\u5236\u7684\u3002
QDOC.copied.from.builtin=<small>(\u4ECE\u5185\u7F6E\u63CF\u8FF0\u590D\u5236\uFF09</small>
QDOC.copied.from.class.$0=<i>\u7F3A\u5C11\u6587\u6863</i>\u4EE5\u4E0B\u5185\u5BB9\u662F\u4ECE\u7C7B<code> {0} </code>\u4E2D\u590D\u5236\u7684\u3002
QDOC.assigned.to.$0=\u5206\u914D\u7ED9<code> {0} </code>
QDOC.wrapped.in.$0=\u5305\u88C5\u5728<code> {0} </code>\u4E2D
QDOC.module.path.unknown=(\u6A21\u5757\u8DEF\u5F84\u672A\u77E5\uFF09
QDOC.epydoc.python2.sdk.not.found=\u60A8\u9700\u8981\u914D\u7F6EPython 2 SDK\u624D\u80FD\u5448\u73B0<a href='http://epydoc.sourceforge.net/'> Epydoc </a>\u6587\u6863
QDOC.sdk.not.found=\u60A8\u9700\u8981\u914D\u7F6EPython SDK\u6765\u5448\u73B0\u6587\u6863\u5B57\u7B26\u4E32

runcfg.tests.cant_rerun=\u7531\u4E8E\u6D4B\u8BD5ID\u65E0\u6CD5\u89E3\u6790\uFF0C\u56E0\u6B64\u65E0\u6CD5\u91CD\u65B0\u8FD0\u884C\u6D4B\u8BD5\u3002\u5C1D\u8BD5\u5220\u9664\u8FD0\u884C\u914D\u7F6E\uFF0C\u5E76\u4F7F\u7528\u53F3\u952E\u5355\u51FB\u65B0\u5EFA\u4E00\u4E2A\u3002

### doctest run conf
runcfg.doctest.display_name=\u6587\u6863\u6D4B\u8BD5
runcfg.doctest.description=Python\u7684doctests\u8FD0\u884C\u914D\u7F6E

### nosetests run conf
runcfg.nosetests.display_name=Nosetests
runcfg.nosetests.description=Python\u7684nosetests\u8FD0\u884C\u914D\u7F6E

### pytest run conf
runcfg.pytest.display_name=py.test
runcfg.pytest.description=py.test\u8FD0\u884C\u914D\u7F6E
runcfg.pytest.target=\u76EE\u6807(&T):
runcfg.pytest.parameters=\u9009\u9879(&O):
runcfg.pytest.keywords=\u5173\u952E\u8BCD(&K):

### trial run conf
runcfg.trial.display_name=\u626D\u66F2\u7684\u5BA1\u5224

### test run configuration
runcfg.test.display_name=Python\u6D4B\u8BD5
runcfg.test.description=\u7531PyCharm\u652F\u6301\u7684Python\u6846\u67B6

### unittest run configuration
runcfg.unittest.display_name=\u5355\u5143\u6D4B\u8BD5
runcfg.unittest.description=Python\u7684unittest\u8FD0\u884C\u914D\u7F6E
runcfg.unittest.no_script_name=\u8BF7\u6307\u5B9A\u811A\u672C\u540D\u79F0
runcfg.unittest.no_module_name=\u8BF7\u6307\u5B9A\u6A21\u5757\u5408\u683C\u7684\u540D\u79F0
runcfg.unittest.no_class_name=\u8BF7\u6307\u5B9A\u73ED\u7EA7\u540D\u79F0
runcfg.unittest.no_method_name=\u8BF7\u6307\u5B9A\u65B9\u6CD5\u540D\u79F0
runcfg.unittest.no_folder_name=\u8BF7\u6307\u5B9A\u5177\u6709\u6D4B\u8BD5\u7684\u6587\u4EF6\u5939
runcfg.unittest.incorrect.script=\u6D4B\u8BD5\u811A\u672C\u540D\u79F0\u5E94\u4EE5\u201C\u6D4B\u8BD5\u201D\u524D\u7F00\u5F00\u5934
runcfg.unittest.dlg.tests_group_title=\u6D4B\u8BD5:
runcfg.unittest.dlg.test_script_label=\u811A\u672C:
runcfg.unittest.dlg.class_label=\u7C7B:
runcfg.unittest.dlg.method_label=\u65B9\u6CD5:
runcfg.unittest.dlg.function_label=\u529F\u80FD:
runcfg.unittest.dlg.folder_path=\u5939:
runcfg.unittest.dlg.test_type_title=\u6D4B\u8BD5:
runcfg.unittest.dlg.all_in_folder_title=\u5168\u90E8\u5728\u6587\u4EF6\u5939\u4E2D
runcfg.unittest.dlg.all_in_script_title=\u811A\u672C
runcfg.unittest.dlg.test_class_title=\u7C7B
runcfg.unittest.dlg.test_method_title=\u65B9\u6CD5
runcfg.unittest.dlg.folder_title=\u6D4B\u8BD5\u6587\u4EF6\u5939:
runcfg.unittest.no_valid_sdk=\u8BF7\u9009\u62E9\u4E00\u4E2A\u6709\u6548\u7684Python\u4E2D\u95F4\u4EBA
runcfg.unittest.no_module_sdk=\u8BF7\u9009\u62E9\u4E00\u4E2A\u6709\u6548\u7684Python SDK\u6A21\u5757
runcfg.unittest.no_sdk=\u8BF7\u6307\u5B9A\u4E00\u4E2APython SDK
runcfg.unittest.dlg.select.folder.path=\u9009\u62E9\u6587\u4EF6\u5939\u8DEF\u5F84:
runcfg.unittest.dlg.select.script.path=\u9009\u62E9\u811A\u672C\u8DEF\u5F84:
runcfg.unittest.dlg.interpreter_options_title=\u53E3\u8BD1\u5458\u9009\u9879:
runcfg.unittest.dlg.messages.working.dir=\u5DE5\u4F5C\u76EE\u5F55:
runcfg.labels.script_parameters=\u53C2\u6570(&P):
runcfg.labels.script=\u811A\u672C(&S):
runcfg.labels.environment_variables=\u73AF\u5883\u53D8\u91CF(&E):
runcfg.labels.interpreter=\u4F7F\u7528\u6307\u5B9A\u7684\u89E3\u91CA\u5668(&U):
runcfg.labels.interpreter_options=\u53E3\u8BD1\u5458\u9009\u9879(&O):
runcfg.labels.working_directory=\u5DE5\u4F5C\u76EE\u5F55(&W):
runcfg.captions.script_parameters_dialog=\u8F93\u5165\u811A\u672C\u53C2\u6570
runcfg.captions.interpreter_options_dialog=\u8F93\u5165\u89E3\u91CA\u5668\u9009\u9879
sdk.error.invalid.interpreter.name.$0=\u65E0\u6548\u7684Python\u4E2D\u6587\u540D\u79F0\u201C{0}\u201D\uFF01
sdk.select.path=\u9009\u62E9Python\u89E3\u91CA\u5668
runcfg.unittest.dlg.pattern=\u6A21\u5F0F:

runcfg.testing.no.test.framework=\u5728\u9009\u5B9A\u7684\u89E3\u91CA\u5668\u4E2D\u627E\u4E0D\u5230{0}\u4E9A\u519B

# Consoles messages
python.console=Python\u63A7\u5236\u53F0


# UI messages
MSG.title.bad.sdk=\u65E0\u6548\u7684Python SDK
MSG.cant.setup.sdk.$0=\u65E0\u6CD5\u8BBE\u7F6Epython SDK \n\u5728{0}\u3002\nSDK\u4F3C\u4E4E\u65E0\u6548\u3002


#Buildout
buildout=\u6269\u5EFA
buildout.unresolved.part.inspection=\u5EFA\u7ACB\u914D\u7F6E\u672A\u89E3\u51B3\u7684\u90E8\u5206\u68C0\u67E5
buildout.unresolved.part.inspection.msg=\u672A\u89E3\u51B3\u7684\u90E8\u5206\u53C2\u8003
runcfg.unittest.dlg.test_function_title=\u529F\u80FD
runcfg.unittest.dlg.keywords=\u5173\u952E\u8BCD:
run.configuration.remote.debug.name=Python\u8FDC\u7A0B\u8C03\u8BD5
run.configuration.type.description=\u542F\u52A8\u8FDC\u7A0B\u8C03\u8BD5\u670D\u52A1\u5668
run.configuration.show.command.line.action.name=\u663E\u793APython\u63D0\u793A

unable.to.stop=\u5F53\u524D\u6B63\u5728\u8FD0\u884C\u7684\u8FDB\u7A0B\u4E0D\u80FD\u505C\u6B62\u3002\u9996\u5148\u624B\u52A8\u6740\u6B7B\u5B83\u3002

#Debug

debug.popup.title.step.into.function=\u6B65\u5165\u529F\u80FD

remote.debug.info=\u4FE1\u606F
remote.debug.server.hint=\u542F\u52A8\u6B64\u8C03\u8BD5\u914D\u7F6E\u4EE5\u542F\u52A8\u8C03\u8BD5\u670D\u52A1\u5668\u3002
remote.debug.server.hint1.5=\u66F4\u65B0\u60A8\u7684\u811A\u672C:
remote.debug.server.hint2=1.\u5C06Pycharm-debug.egg\u4ECEPyCharm\u5B89\u88C5\u6DFB\u52A0\u5230Python\u8DEF\u5F84\u3002
remote.debug.server.hint2.5=2.\u6DFB\u52A0\u4EE5\u4E0B\u5BFC\u5165\u8BED\u53E5:
remote.debug.server.hint3=3.\u6DFB\u52A0\u4EE5\u4E0B\u547D\u4EE4\u4EE5\u8FDE\u63A5\u5230\u8C03\u8BD5\u670D\u52A1\u5668:
remote.debug.settings=\u8BBE\u7F6E
remote.debug.remote.host=\u8FDC\u7A0B\u4E3B\u673A
remote.debug.port=\u6E2F\u53E3:
remote.debug.use.path.mapping=\u4F7F\u7528\u8DEF\u5F84\u6620\u5C04
remote.debug.remote.root.folder=\u8FDC\u7A0B\u8DEF\u5F84\u524D\u7F00:
remote.debug.local.root.folder=\u672C\u5730\u8DEF\u5F84\u524D\u7F00:
remote.debug.server.hint4=\u5982\u679C\u8981\u542F\u7528stdout\u548Cstderr\u91CD\u5B9A\u5411\u5230PyCharm\u63A7\u5236\u53F0\uFF0C\u8BF7\u5728\u811A\u672C\u4E2D\u4F7F\u7528\u4EE5\u4E0B\u547D\u4EE4:
remote.debug.local.host=\u672C\u5730\u4E3B\u673A\u540D\u79F0:
remote.debug.redirect.output=\u5C06\u8F93\u51FA\u91CD\u5B9A\u5411\u5230\u63A7\u5236\u53F0
remote.debug.suspend.on.connect=\u8FDE\u63A5\u540E\u6682\u505C

# SDK / skeletons
sdk.errorlog.$0.mods.fail.in.$1.sdks={0,choice,|1#1 module|2#{0,number} modules} \u5728 {1,choice, |1#1 interpreter|2#{1,number} interpreters} \u4E2D\u5931\u8D25<a href=\"#\">\u8BE6\u60C5...</a>
sdk.errorlog.$0.mods.fail.in.$1.sdks.$2.completely={0,choice,|1#1 module|2#{0,number} modules}\u5728{1,choice, |1#1 interpreter|2#{1,number} interpreters}, {2,choice, |1#1 interpreter|2#{2,number} interpreters}\u5931\u8D25</i>\u5B8C\u6210<a href=\"#\">\u8BE6\u60C5...</a>
sdk.some.skeletons.failed=\u4E00\u4E9B\u9AB7\u9AC5\u672A\u80FD\u4EA7\u751F
sdk.error.dialog.problems=\u6846\u67B6\u751F\u6210\u95EE\u9898
sdk.error.dialog.failed.sdks=\u5931\u8D25\u7684\u89E3\u91CA\u5668
sdk.error.dialog.failed.modules=\u5931\u8D25\u7684\u6A21\u5757
sdk.error.dialog.were.blacklisted=\u5F53\u6A21\u5757\u66F4\u65B0\u6216\u65B0\u7248\u672C\u7684\u53D1\u751F\u5668\u53EF\u7528\u65F6\uFF0C\u5C06\u518D\u6B21\u5C1D\u8BD5\u4E3A\u4E0A\u8FF0\u6A21\u5757\u751F\u6210\u6846\u67B6\u3002
sdk.gen.querying.$0=\u67E5\u8BE2{0}\u7684\u6846\u67B6\u751F\u6210\u5668...
sdk.gen.updating.builtins.$0=\u66F4\u65B0{0}\u7684\u5185\u7F6E\u7ED3\u6784\u7684\u6846\u67B6...
sdk.gen.updating.$0=\u66F4\u65B0{0}\u7684\u6846\u67B6...
sdk.gen.cleaning.$0=\u6E05\u7406{0}\u7684\u6846\u67B6...
sdk.gen.reloading=\u91CD\u65B0\u52A0\u8F7D\u751F\u6210\u7684\u6846\u67B6...
sdk.gen.reading.versions.file=\u9605\u8BFB\u7248\u672C\u6587\u4EF6...
sdk.gen.notify.converting.old.skels=\u8F6C\u6362\u65E7\u7684\u6846\u67B6
sdk.gen.notify.converting.text=\u4E8C\u8FDB\u5236\u6A21\u5757\u7684\u6846\u67B6\u4F3C\u4E4E\u6765\u81EA\u65E7\u7248\u672C\u3002<br/>\u8FD9\u4E9B\u5C06\u88AB\u5B8C\u5168\u91CD\u65B0\u751F\u6210\uFF0C\u8FD9\u5C06\u9700\u8981\u4E00\u4E9B\u65F6\u95F4\uFF0C\u4F46\u53EA\u4F1A\u53D1\u751F\u4E00\u6B21</i>\u3002<br/>\u4E0B\u4E00\u6B21\u6253\u5F00\u9879\u76EE\uFF0C\u53EA\u6709\u65B0\u7684\u6216\u66F4\u65B0\u7684\u4E8C\u8FDB\u5236\u6A21\u5757\u7684\u6846\u67B6\u5C06\u88AB\u91CD\u65B0\u751F\u6210\u3002
sdk.gen.updating.interpreter=\u66F4\u65B0Python\u89E3\u91CA\u5668
sdk.scanning.installed.packages=\u626B\u63CF\u5DF2\u5B89\u88C5\u7684\u8F6F\u4EF6\u5305
sdk.gen.stubs.for.binary.modules=\u751F\u6210\u4E8C\u8FDB\u5236\u6A21\u5757{0}\u7684\u5B58\u6839

# Active SDK configurable and related dialogs
active.sdk.dialog.show.all.item=\u663E\u793A\u6240\u6709...
active.sdk.dialog.project.interpreter=\u9879\u76EE\u7FFB\u8BD1:
active.sdk.dialog.project.interpreter.path.mappings=\u8DEF\u5F84\u6620\u5C04:
active.sdk.dialog.project.interpreter.path.mappings.default.project.error=\u6253\u5F00\u6216\u521B\u5EFA\u9879\u76EE\u6765\u914D\u7F6E\u6620\u5C04

sdk.details.step.add.local=\u6DFB\u52A0\u672C\u5730...
sdk.details.step.add.remote=\u6DFB\u52A0\u8FDC\u7A0B...
sdk.details.step.create.virtual.env=\u521B\u5EFAVirtualEnv
sdk.details.step.create.conda.env=\u521B\u5EFAConda Env
sdk.details.step.show.all=\u663E\u793A\u6240\u6709...

sdk.details.dialog.title=\u9879\u76EE\u53E3\u8BD1\u5458
sdk.details.dialog.show.all.virtual.envs=\u663E\u793A\u4E0E\u5176\u4ED6\u9879\u76EE\u76F8\u5173\u7684\u865A\u62DF\u73AF\u5883
sdk.details.dialog.show.interpreter.paths=\u663E\u793A\u6240\u9009\u89E3\u91CA\u5668\u7684\u8DEF\u5F84
sdk.details.dialog.error.duplicate.name=\u8BF7\u4E3A\u89E3\u91CA\u8005\u6307\u5B9A\u4E00\u4E2A\u552F\u4E00\u7684\u540D\u5B57

sdk.edit.dialog.title=\u7F16\u8F91Python\u89E3\u91CA\u5668
sdk.edit.dialog.associate.virtual.env.with.path=\u5C06\u6B64\u865A\u62DF\u73AF\u5883\u4E0E{0}\u5173\u8054
sdk.edit.dialog.associate.virtual.env.current.project=\u5C06\u6B64\u73AF\u5883\u4E0E\u5F53\u524D\u9879\u76EE\u76F8\u5173\u8054
sdk.edit.dialog.specify.interpreter.path=\u6307\u5B9A\u89E3\u91CA\u5668\u8DEF\u5F84

sdk.paths.dialog.title=\u53E3\u8BD1\u5458\u8DEF\u5F84
sdk.paths.dialog.reload.paths=\u91CD\u65B0\u52A0\u8F7D\u8DEF\u5F84\u5217\u8868
sdk.paths.dialog.added.by.user.suffix=(\u7531\u7528\u6237\u6DFB\u52A0\uFF09
sdk.paths.dialog.removed.by.user.suffix=(\u7531\u7528\u6237\u5220\u9664\uFF09

sdk.create.venv.dialog.creating.venv=\u521B\u5EFA\u865A\u62DF\u73AF\u5883
sdk.create.venv.dialog.make.available.to.all.projects=\u63D0\u4F9B\u7ED9\u6240\u6709\u9879\u76EE
sdk.create.venv.dialog.select.venv.location=\u9009\u62E9\u865A\u62DF\u73AF\u5883\u7684\u4F4D\u7F6E
sdk.create.venv.dialog.error.not.empty.directory=\u76EE\u5F55\u4E0D\u662F\u7A7A\u7684
sdk.create.venv.dialog.error.empty.venv.name=VirtualEnv\u540D\u79F0\u4E0D\u80FD\u4E3A\u7A7A
sdk.create.venv.dialog.error.empty.venv.location=\u76EE\u7684\u5730\u76EE\u5F55\u8DEF\u5F84\u4E0D\u80FD\u4E3A\u7A7A
sdk.create.venv.dialog.error.invalid.directory.name=\u65E0\u6548\u7684\u76EE\u5F55\u540D\u79F0
sdk.create.venv.dialog.error.failed.to.create.venv=\u65E0\u6CD5\u521B\u5EFA\u865A\u62DF\u73AF\u5883

sdk.create.venv.dialog.title=\u521B\u5EFA\u865A\u62DF\u73AF\u5883
sdk.create.venv.dialog.label.name=\u540D\u79F0:
sdk.create.venv.dialog.label.location=\u4F4D\u7F6E:
sdk.create.venv.dialog.label.base.interpreter=\u57FA\u7840\u7FFB\u8BD1:
sdk.create.venv.dialog.label.inherit.global.site.packages=\u7EE7\u627F\u5168\u5C40\u7AD9\u70B9\u5305
sdk.create.venv.dialog.error.no.base.interpreter=\u9009\u62E9\u57FA\u7840\u89E3\u91CA\u5668

sdk.create.venv.conda.dialog.title=\u521B\u5EFAConda\u73AF\u5883
sdk.create.venv.conda.dialog.error.no.python.version=\u9009\u62E9python\u7248\u672C
sdk.create.venv.conda.dialog.label.python.version=Python\u7248\u672C:

# remote interpreters
remote.interpreter.add.title=\u6DFB\u52A0\u8FDC\u7A0B\u89E3\u91CA\u5668
remote.interpreter.configure.title=\u914D\u7F6E\u8FDC\u7A0BPython\u89E3\u91CA\u5668
remote.interpreter.configure.path.title=\u9009\u62E9Python\u89E3\u91CA\u5668
remote.interpreter.configure.temp.files.path.title=\u4E3APyCharm\u52A9\u624B\u9009\u62E9\u6587\u4EF6\u5939
remote.interpreter.default.interpreter.path=\u5728/ usr / bin\u4E2D/\u87D2\u86C7
remote.interpreter.docker.default.interpreter.path=\u87D2\u86C7
remote.interpreter.unspecified.interpreter.path=\u6307\u5B9APython\u89E3\u91CA\u5668\u8DEF\u5F84
remote.interpreter.unspecified.temp.files.path=\u6307\u5B9APyCharm\u52A9\u624B\u7684\u8DEF\u5F84
remote.interpreter.configure.path.label=Python\u89E3\u91CA\u5668\u8DEF\u5F84:
remote.interpreter.configure.temp.files.path.label=PyCharm\u52A9\u624B\u8DEF\u5F84:
remote.interpreter.error.plugin.missing=\u8FDC\u7A0B\u4E3B\u673A\u8BBF\u95EE\u63D2\u4EF6\u4E22\u5931\u3002\u8BF7\u542F\u7528{0}\u4E2D\u7684\u63D2\u4EF6\u3002

# Message we display for inspection if user uses custom class type members that do not exist
custom.type.mimic.name=\u57FA\u4E8E{0}\u7684\u52A8\u6001\u7C7B


# CommandLine
commandLine.inspection.name=\u547D\u4EE4\u884C\u68C0\u67E5
commandLine.inspection.badCommand=\u9519\u8BEF\u6216\u672A\u77E5\u7684\u547D\u4EE4\u3002\u786E\u4FDD\u8FD9\u4E2A\u547D\u4EE4\u771F\u7684\u5B58\u5728\u3002
commandLine.inspection.badOption=\u4E0D\u597D\u7684\u6216\u672A\u77E5\u7684\u9009\u9879\u3002\u786E\u4FDD\u8FD9\u4E2A\u9009\u9879\u771F\u7684\u5B58\u5728\u3002
commandLine.inspection.badArgument=\u53C2\u6570\u4E0D\u80FD\u6709\u8FD9\u4E2A\u503C\u3002\u4F7F\u7528\u81EA\u52A8\u5B8C\u6210\u6765\u68C0\u67E5\u53EF\u80FD\u7684\u503C\u5217\u8868\u3002
commandLine.inspection.excessArgument=\u8FD9\u91CC\u4E0D\u53EF\u80FD\u6709\u8FC7\u591A\u7684\u8BBA\u636E\u6216\u8BBA\u70B9
# What to display if argument is available here, but no name provided
commandLine.argumentHint.defaultName=\u53C2\u6570
# What to display of user entered junk
commandLine.commandNotFound=\u627E\u4E0D\u5230{0}\uFF1A\u547D\u4EE4

# Window with actions
# "X" button title
windowWithActions.closeWindow=\u5173\u95ED\u7A97\u53E3
# "Stop" button title
windowWithActions.stopProcess=\u505C\u6B62\u6B63\u5728\u8FD0\u884C\u7684\u8FDB\u7A0B

formatter.imports.panel.title=\u8FDB\u53E3
formatter.imports.panel.optimize.imports=\u4F18\u5316\u8FDB\u53E3
formatter.imports.panel.sort.imports=\u6392\u5E8F\u5BFC\u5165\u8BED\u53E5
formatter.imports.panel.sort.names.in.from.imports=\u5728\u201Cfrom\u201D\u5BFC\u5165\u4E2D\u6392\u5E8F\u5BFC\u5165\u7684\u540D\u79F0
formatter.imports.panel.join.from.imports.with.same.source=\u52A0\u5165\u201C\u6765\u81EA\u201D\u540C\u4E00\u6765\u6E90\u7684\u8FDB\u53E3
formatter.imports.panel.sort.by.type=\u5728\u4E00\u4E2A\u7EC4\u4E2D\u5355\u72EC\u6392\u5E8Fplain\u548C\u201Cfrom\u201D\u5BFC\u5165

formatter.panel.dict.alignment.do.not.align=\u4E0D\u8981\u5BF9\u9F50
formatter.panel.dict.alignment.align.on.colon=\u5BF9\u9F50\u5192\u53F7
formatter.panel.dict.alignment.align.on.value=\u5BF9\u51C6\u4EF7\u503C
formatter.panel.dict.alignment.label=\u5B57\u5178\u5BF9\u9F50:
formatter.panel.add.trailing.line.feed=\u5728\u6587\u4EF6\u672B\u5C3E\u6DFB\u52A0\u6362\u884C\u7B26
formatter.panel.use.continuation.indent.for.arguments=\u4F7F\u7528\u8FDE\u7EED\u7F29\u8FDB\u53C2\u6570

formatter.left.bracket = \u5DE6\u62EC\u53F7
formatter.around.eq.in.named.parameter = around =\u5728\u547D\u540D\u53C2\u6570\u4E2D
formatter.around.eq.in.keyword.argument = around =\u5728\u5173\u952E\u5B57\u53C2\u6570\u4E2D
formatter.braces = \u80CC\u5E26
formatter.before.backslash = \u4E4B\u524D\u201C
formatter.before.hash = \u5728'#'\u4E4B\u524D
formatter.after.hash = \u5728'#'\u4E4B\u540E
formatter.around.top.level.imports = \u9876\u7EA7\u8FDB\u53E3\u540E:
formatter.after.local.imports=\u5F53\u5730\u8FDB\u53E3\u540E:
formatter.before.first.method=\u7B2C\u4E00\u79CD\u65B9\u6CD5\u4E4B\u524D:
formatter.around.top.level.classes.and.function=\u56F4\u7ED5\u9876\u7EA7\u8BFE\u7A0B\u548C\u529F\u80FD:
formatter.around.multiplicative.operators=\u4E58\u6CD5\u8FD0\u7B97\u7B26(*\uFF0C@\uFF0C/\uFF0C\uFF05\uFF09
formatter.around.power.operator=\u7535\u529B\u8FD0\u8425\u5546(**\uFF09
formatter.single.clause.statements=\u5355\u6761\u8BED\u53E5
formatter.multi.clause.statements=\u591A\u8BED\u53E5\u8BED\u53E5
formatter.force.new.line.after.colon=\u5192\u53F7\u540E\u5F3A\u5236\u6362\u884C
formatter.align.when.multiline=\u591A\u884C\u5BF9\u9F50
formatter.collections.and.comprehensions=\u6536\u85CF\u548C\u7406\u89E3
formatter.from.import.statements=\u201C\u6765\u81EA\u201D\u8FDB\u53E3\u8BED\u53E5
formatter.from.import.statements.force.parentheses.if.multiline=\u5982\u679C\u591A\u884C\u5F3A\u5236\u62EC\u53F7
formatter.from.import.statements.force.comma.if.multline=\u5982\u679C\u591A\u884C\uFF0C\u5F3A\u5236\u5C3E\u968F\u9017\u53F7
formatter.dictionary.literals=\u5B57\u5178\u6587\u5B57
formatter.hang.closing.brackets=\u6302\u7740\u62EC\u53F7

smartKeys.insert.backslash.in.statement.on.enter=\u5728\u8BED\u53E5\u4E2D\u6309Enter\u65F6\u63D2\u5165\u53CD\u659C\u6760
smartKeys.insert.self.in.method=\u5B9A\u4E49\u65B9\u6CD5\u65F6\u63D2\u5165\u201C\u81EA\u6211\u201D
smartKeys.insert.type.placeholder.in.docstring.stub=\u5728\u6587\u6863\u6CE8\u91CA\u5B58\u6839\u4E2D\u63D2\u5165\u7C7B\u578B\u5360\u4F4D\u7B26

show.expression.type.no.expression.found=\u6CA1\u6709\u53D1\u73B0\u8868\u8FBE
runcfg.labels.module=\u6A21\u5757: